version: '3'
networks:
    nginx-php81-node:
    
services:
 # nginx
    nginx-service:
        image: nginx:stable-alpine
        container_name: nginx-container
        ports:
            - "8080:80"
        volumes:
            - ./public:/usr/share/nginx/html
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - php81-service
            - database
        networks:
            - nginx-php81-node

# php81
   php81-service:
        build:
            context: .
            dockerfile: ./php/Dockerfile
        container_name: php81-container
        ports:
            - "9000:9000"
        volumes:
            - ./public:/usr/share/nginx/html
        networks:
            - nginx-php81-node
#node
    node-service:
        image: node:latest
        container_name: node-container
        volumes:
            - ./public:/usr/share/nginx/html
        working_dir: /usr/share/nginx/html
        networks:
            - nginx-php81-node



###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-13}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ChangeMe}
      POSTGRES_USER: ${POSTGRES_USER:-symfony}
    volumes:
      - db-data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
###> doctrine/doctrine-bundle ###
  db-data:
###< doctrine/doctrine-bundle ###
